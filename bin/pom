#!/usr/bin/env node
var daemonize   = require('daemonize2');
var command = require('commander');
var version = require('../package.json').version;
var fs = require('fs');

var conf = {
    main: '../lib/pom.js',
    name: 'pom',
    pidfile: '/tmp/pom.pid',
    silent: true
};

command.version(version);
command.option('-b, --break', 'break')

var timerDaemon = daemonize.setup(conf);

command
    .command('start')
    .description('start pomodoro timer')
    .action(function(){
        conf.argv = command.break ? 'break' : 'pomodoro';
        timerDaemon.start();
        console.log('pomodoro start');
    });

command
    .command('status')
    .description('check the status of pomodoro timer')
    .action(function(){
        var isRunning = timerDaemon.status();
        if (isRunning) {
            showMinutesLeft();
        } else {
            console.log('No pomodoro running');
        }
    });

command
    .command('stop')
    .description('stop pomodoro timer')
    .action(function(){
        timerDaemon.stop();
        console.log('pomodoro stop');
    });

command.parse(process.argv);

if (!command.args.length) command.help();

function showMinutesLeft() {
    fs.stat(conf.pidfile, function(err, stats) {
        if (err) {
            console.log(err);
        } else {
            var startTime = stats.ctime;
            var now = new Date();
            var secondsDiff = (now.getTime() - startTime.getTime())/1000;
            var minutesLeft = 25 - Math.floor(secondsDiff / 60);
            console.log('Pomodoro ticking! ' + minutesLeft + " minutes left.");
        }
    });
}
